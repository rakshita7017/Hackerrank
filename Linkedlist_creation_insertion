public class LinkedlistInsertionCreation {
    Node head;
    private Node next;

    static  class Node{
       int data;
       Node next;

       //constructor
       Node(int d){
           data=d;
           next=null;
       }

    }

    //method to insert a new node
     public static LinkedlistInsertionCreation insert(LinkedlistInsertionCreation list,int data){
  //create a new node
         Node new_node= new Node(data);
         //if ll is empty
         // make newnode as head
         if(list.head==null){
             list.head=new_node;
         }

         //if ll is not empty insert thr new node in the last
         else{
             Node last=list.head;
             while(last.next!=null){
                 last=last.next;
             }
             last.next=new_node;
         }
         return list;
    }

    //method to print the linkedlist
    public static void printlist(LinkedlistInsertionCreation list){
        Node currnode=list.head;
        System.out.print("linkedlist: ");
        //traverse through the linkedlist
        while(currnode!=null){
            System.out.print(currnode.data+" ");

            //no to the next node
            currnode=currnode.next;
        }


    }
    public static void main(String[] args) {
//create an empty list
        LinkedlistInsertionCreation list=new LinkedlistInsertionCreation();

        //insertion
        list=insert(list,10);
        list=insert(list,20);
        list=insert(list,30);
        list=insert(list,40);
        list=insert(list,50);
        list=insert(list,60);
        list=insert(list,70);
        list=insert(list,80);

        printlist(list);


    }
}
