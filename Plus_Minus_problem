import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'plusMinus' function below.
     *
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static void plusMinus(List<Integer> arr) {
    int positivecount=0;
     int negativecount=0;
     int zerocount=0;
     int totalcount=arr.size();
     
     for(int num:arr){
         if(num>0){
             positivecount++;
         }
         else if(num==0){
             zerocount++;
         }
         else{
             negativecount++;
         }
     }
     
     double positiveratio=(double)positivecount/totalcount;
      double negativeratio=(double)negativecount/totalcount;
       double zeroratio=(double)zerocount/totalcount;
       System.out.printf("%.6f%n",positiveratio);
        System.out.printf("%.6f%n",negativeratio);
         System.out.printf("%.6f%n",zeroratio);

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        Result.plusMinus(arr);

        bufferedReader.close();
    }
}
